///////////////////////////////////////////////
Asset loading/mapping via plain json file

"assets.json"
{
    "textures": {
        "player": "player.png",
        "enemy": "enemy.png"
    },
    "sounds": {
        "jump": "jump.ogg"
    },
    "fonts": {
        "main": "arial.ttf"
    },
    "groups": {
        "player": {
            "textures": [ // when multiple required
                "player"
            ],
            "sounds": [
                "jump"
            ],
            "texture": "player" // when just one required
        }
    }
}

[dir]
textures = res/textures/
sounds = res/sounds/
fonts = res/fonts/

"level.json"
{
    "assets": {
        "textures": [
            "enemy"
        ]
        "groups": [
            "player"
        ]
    },
    "etc"
}

- CLevel loads level.json
- CLevel loads assets into data cache from level.json
- data cache combines path value from json with path dir from engine.ini
- data cache loads from file

The level won't have entity-specific assets to load, only level-specific ones.
Individual entities will have their own assets they depend on, gotten somehow.
Maybe a virtual function that returns a vector of strings (IDs)? Or just a vector of strings set in the constructor?
Possibly a feature of CObject, or another abstract class - IAssetContainer - or something
///////////////////////////////////////////////

///////////////////////////////////////////////
Engine class:
    Don't have m_renderTargetInternal, view, etc. as members?
    Have them just as local variables in the run() function?
    They aren't used outside of that except for initialisation right?
    And nothing outside of engine requires them to be intialised before them.
    So there's no point having them initialise first except for convention or whatever.
Maybe have pimpl for these? Raw pointers in the class definition, and have them point to the automatic data in run(),
    so we can have getter functions for them still, even though they are local to run()
///////////////////////////////////////////////

///////////////////////////////////////////////
Move init() to start of run() function? Maybe check if the engine is already initialised and run init() if not?
///////////////////////////////////////////////

///////////////////////////////////////////////
engine.json
{
    "render": {
        "resolution": {
            "x": 240,
            "y": 160
        },
        "resizable": false
    },
    "dirs": {
        "texture": "res/textures/",
        "sound": "res/sounds/",
        "music": "res/music/",
        "font": "res/fonts/"
    },
    "assets": {
        "texture": {
            "player": "player.png",
            "enemy": "enemy.png"
        },
        "sound": {
            "jump": "player_jump.ogg"
        },
        "groups": {
            "player": {
                "texture": [
                    "player"
                ],
                "sound": [
                    "jump"
                ]
            }
        }
    }
}
///////////////////////////////////////////////

///////////////////////////////////////////////
Add AngelScript! Then have it serialise and deserialise stuff to/from json
///////////////////////////////////////////////
